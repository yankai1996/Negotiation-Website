<html>

<head>
	<meta charset="UTF-8">
	<title>Admin</title>
	<link href="/css/common.css" type="text/css" rel="stylesheet">
	<link href="/css/admin.css" type="text/css" rel="stylesheet">
</head>

<body>

	<div class="box">

		<div class="tabs">
			<button class="tab-button active" onclick="openTab(event, 'Games')">Games</button>
			<button class="tab-button" onclick="openTab(event, 'Participants')">Participants</button>
			<div class="logout" onclick="location.href='/logout'">Log out</div>
		</div>

		<div class="tab-container">
			
			<div id="Games" class="tab-content">
				<table class="games striped bordered">
					<thead>
						<th>Alpha</th>
						<th>Beta</th>
						<th>Gamma</th>
						<th>T</th>
						<th>w</th>
						<th>n</th>
						<th></th>
					</thead>

					<tbody id="game-table-body">
						<% games.forEach(function(game) { %>
						<tr>
							<td class="alpha"><%= game.alpha %></td>
							<td class="beta"> <%= game.beta  %></td>
							<td class="gamma"><%= game.gamma %></td>
							<td class="t">	  <%= game.t 	 %></td>
							<td class="w">    <%= game.w 	 %></td>
							<td class="n">    <%= game.n 	 %></td>
							<td>
								<button class="delete alt small" onclick="deleteGames(this)">DELETE</button>
							</td>
						</tr>
						<% }); %>
					</tbody>
					
					<tfoot>
						<td><input class="param" type="text" id="alpha" placeholder="alpha" onkeypress="floatOnly(event)"></td>
						<td><input class="param" type="text" id="beta" 	placeholder="beta" 	onkeypress="floatOnly(event)"></td>
						<td><input class="param" type="text" id="gamma" placeholder="gamma" onkeypress="floatOnly(event)"></td>
						<td><input class="param" type="text" id="t" 	placeholder="T" 	onkeypress="intOnly(event)"  ></td>
						<td><input class="param" type="text" id="w" 	placeholder="w" 	onkeypress="floatOnly(event)"></td>
						<td><input class="param" type="text" id="n" 	placeholder="n" 	onkeypress="intOnly(event)"  ></td>
						<td>
							<button class="alt small" onclick="addGames()">ADD</button>
						</td>
					</tfoot>
				</table>
			</div>

			<div id="Participants" class="tab-content">
				<div class="content">
					<h3 id="count">Participants: <%= count %></h3>
					<div class="input-board">
						<input class="alt" id="addParticipants" type="text" placeholder="1~100" onkeypress="intOnly(event)">
						<button class="alt" onclick="addParticipants()">ADD</button>
					</div>
					<div class="line"></div>
					<table class="participants striped bordered">
						<thead>
							<th>ID</th>
							<!-- <th>Payoff</th> -->
						</thead>

						<tbody id="participant-table-body">
						<% participants.forEach(function(p) { %>
							<tr>
								<td class="id"><p><%= p.first %></p><p><%= p.second %></p></td>
								<!-- <td></td> -->
							</tr>
						<% }); %>
					</tbody>
					</table>
				</div>
				
			</div>
			
		</div>
	</div>

<script type="text/javascript" src="/js/jquery.min.js"></script>
<script type="text/javascript" src="/js/common.js"></script>
<script>

// show the Games tab
$("#Games").show();

// switch tabs between Games and Participants
function openTab(event, tabId) {
	$(".tab-content").hide();
	$("#" + tabId).show();
	$(".tab-button").removeClass("active");
	event.currentTarget.className += " active";
}

// click ADD button to add games
function addGames(){

	// check if empty input
	var isEmpty = false;
	$(".param").each(function(index){
		isEmpty = isEmpty || !$(this).val();
	});
	if (isEmpty) {
		alert("Please enter all parameters!");
		return;
	}

	// format the input to numbers
	var data = {
		alpha: parseFloat($('#alpha').val()),
		beta : parseFloat($('#beta') .val()),
		gamma: parseFloat($('#gamma').val()),
		t 	 : parseInt  ($('#t')	 .val()),
		w	 : parseFloat($('#w')	 .val()),
		n  	 : parseInt  ($('#n')	 .val())
	};

	// check if invalid number
	for (var i in data) {
		if (i == 'alpha' || i == 'beta' || i == 'gamma') {
			if (data[i] < 0 || data[i] > 1) {
				alert(i + " must be between 0-1!");
				$('#'+i).val('');
				return;
			}
		}
	}
	if (data.n == 0) {
		alert("n cannot be 0!");
		$('#n').val('');
		return;
	}

	// post request for adding games
	$.ajax({
		url:  "/admin/add_games",
		type: "POST",
		data: data,
		success : function(res) {
			if (res.success) {
				$(".param").val('');
				if (!mergeGameRow(res.game)){
					appendGameRow(res.game);
				}
			} else {
				alert(res);
			}	
		}
	});
}

// update n if newly added games have the same parameters as the existing ones
function mergeGameRow(game) {
	for (var i = 0; i < $(".alpha").length; i++) {
		if ($('.alpha').eq(i).text() == game.alpha && 
			$('.beta') .eq(i).text() == game.beta  && 
			$('.gamma').eq(i).text() == game.gamma && 
			$('.t')	   .eq(i).text() == game.t 	   && 
			$('.w')	   .eq(i).text() == game.w ){
			var cell = $('.n').eq(i);
			cell.text(parseInt(cell.text()) + game.n);
			return true;
		}
	}
	return false;
}

// append a row of games
function appendGameRow(game) {
	$("#game-table-body").append(
		"<tr>" +
			"<td class='alpha'>" + game.alpha + "</td>" +
			"<td class='beta'>"  + game.beta  + "</td>" +
			"<td class='gamma'>" + game.gamma + "</td>" +
			"<td class='t'>" 	 + game.t 	  + "</td>" +
			"<td class='w'>" 	 + game.w 	  + "</td>" +
			"<td class='n'>" 	 + game.n 	  + "</td>" +
			"<td><button class='delete alt small' onclick='deleteGames(this)'>DELETE</button></td>" +
		"</tr>");
}

// click DELETE button to delete games
function deleteGames(element) {
	// get the index of the row to be deleted
	var i = $(".delete").index(element);

	var data = {
		alpha: parseFloat($('.alpha').eq(i).text()),
		beta : parseFloat($('.beta') .eq(i).text()),
		gamma: parseFloat($('.gamma').eq(i).text()),
		t 	 : parseInt  ($('.t')	 .eq(i).text()),
		w	 : parseFloat($('.w')	 .eq(i).text()),
		n  	 : parseInt  ($('.n')	 .eq(i).text())
	};

	// post request for deleting games
	$.ajax({
		url:  "/admin/delete_games",
		type: "POST",
		data: data,
		success : function(res){
			if (res.success){
				$("#game-table-body > tr").eq(i).remove();
			} else {
				alert(res);
			}
		}
	});
}

// click ADD button to add participants
function addParticipants(){
	var number = parseInt($("#addParticipants").val());
	$("#addParticipants").val('');

	// check if invalid input 
	if (!number || number > 100){
		alert("Please enter an number in 1~100!");
		return;
	}

	// post request for adding participants
	$.ajax({
		url:  "/admin/add_participants",
		type: "POST",
		data: {number: number},
		success : function(res){
			if (res.success){
				updateParticipants(res.participants, res.count);
			} else {
				alert(res);
			}
		}
	});
}

// update participant table
function updateParticipants(participants, count){
	$("#count").html("Participants: " + count);
	$("#participant-table-body").html("");
	participants.forEach(function(p){
		$("#participant-table-body").append(
			"<tr><td class='id'><p>" + p.first + "</p><p>"+ (p.second ? p.second : "") + "</td></tr>"
		);
	});
}

</script>

</body>

</html>